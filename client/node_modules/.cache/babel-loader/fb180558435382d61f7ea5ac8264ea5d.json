{"ast":null,"code":"// import React, { Component } from 'react';\n\n// import Grid from \"@material-ui/core/Grid\";\n// import TextField from \"@material-ui/core/TextField\";\n// import Button from \"@material-ui/core/Button\";\n// import { withStyles } from \"@material-ui/core/styles\";\n// import PropTypes from \"prop-types\";\n// import Typography from '@material-ui/core/Typography';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import './ContactUs.css'\n\n// const styles = {\n//     contactForm: {\n//         marginTop: 50,\n//         width: '60vh'\n//         }\n//   };\n\n// export class ContactUs extends Component {\n//     state = {\n//         userName: '',\n//         email: '',\n//         message: ''\n//     }\n\n//     // Handle submit button\n//     handleSubmit = async event => {\n\n//         const { userName, email, message } = this.state;\n\n//         try {\n//             const data = await postData('https://1u5leuz6gg.execute-api.us-west-2.amazonaws.com/prod/submit', { userName, email, message });\n//             console.log(JSON.stringify(data)); // JSON-string from `response.json()` call\n//         } catch (error) {\n//             console.error(error);\n//         }\n\n//         async function postData(url = '', data = {}) {\n//             // Default options are marked with *\n//                 const response = await fetch(url, {\n//                 method: 'POST', // *GET, POST, PUT, DELETE, etc.\n//                 mode: 'no-cors', // no-cors, *cors, same-origin\n//                 cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n//                 credentials: 'same-origin', // include, *same-origin, omit\n//                 headers: {\n//                 'Content-Type': 'application/json'\n//                 // 'Content-Type': 'application/x-www-form-urlencoded',\n//                 },\n//                 redirect: 'follow', // manual, *follow, error\n//                 referrer: 'no-referrer', // no-referrer, *client\n//                 body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n//             });\n//         return await response.json(); // parses JSON response into native JavaScript objects\n//         }\n\n//         // Reset from after submiting\n//         document.getElementById('contact-form').reset();\n//         this.setState({ userName: \"\", email: \"\", message: \"\" });\n//         event.preventDefault();\n//     }\n\n//     // Handle fields change\n//     handleChange = input => event => {\n//         const { name, value } = event.target;\n\n//         this.setState({ [name]: value });\n\n//     }\n\n//     render() {\n//         const { classes } = this.props;\n//         const { userName, email, message } = this.state;\n//         return (\n//             <div className={`bgc`}>\n//             <CssBaseline />\n//                 <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\n//                     {'Contact Form'.toUpperCase()}\n//                 </Typography>\n//                 <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n//                     <Grid item>\n//                         <form\n//                         id=\"contact-form\"\n//                         className={classes.contactForm}\n//                         onSubmit={this.handleSubmit}\n//                         >\n//                             <Grid item>\n//                                 <TextField\n//                                 fullWidth\n//                                 required\n//                                 id=\"name\"\n//                                 label=\"Name\"\n//                                 name=\"userName\"\n//                                 className={classes.inputField}\n//                                 onChange={this.handleChange(\"userName\")}\n//                                 margin=\"normal\"\n//                                 />\n//                             </Grid>\n//                             <Grid item>\n//                                 <TextField\n//                                 fullWidth\n//                                 required\n//                                 id=\"email\"\n//                                 label=\"Email\"\n//                                 name=\"email\"\n//                                 className={classes.inputField}\n//                                 onChange={this.handleChange(\"email\")}\n//                                 margin=\"normal\"\n//                                 />\n//                             </Grid>\n//                             <Grid item>\n//                                 <TextField\n//                                 fullWidth\n//                                 required\n//                                 id=\"message\"\n//                                 label=\"Message\"\n//                                 name=\"message\"\n//                                 className={classes.inputField}\n//                                 onChange={this.handleChange(\"message\")}\n//                                 margin=\"normal\"\n//                                 multiline\n//                                 rowsMax=\"4\"\n//                                 />\n//                             </Grid>\n//                             <Grid container direction=\"row\" spacing={2} style={{ marginTop: 20 }}>\n//                             <Grid item >\n//                                 <Button\n//                                 className={classes.formButton}\n//                                 type=\"reset\"\n//                                 variant=\"contained\"\n//                                 color=\"default\"\n//                                 //disabled={submitting || pristine}\n//                                 >\n//                                 RESET\n//                                 </Button>\n//                             </Grid>\n//                             <Grid item >  \n//                                 <Button\n//                                 className={classes.formButton}\n//                                 type=\"submit\"\n//                                 variant=\"contained\"\n//                                 color=\"primary\"\n//                                 >\n//                                 Submit\n//                                 </Button>\n//                             </Grid>\n//                             </Grid>\n//                         </form>\n//                     </Grid>\n//                 </Grid>\n\n//             </div> \n\n//         );\n//     }\n// }\n\n// ContactUs.propTypes = {\n//     classes: PropTypes.object.isRequired,\n//   };\n\n// export default withStyles(styles)(ContactUs);","map":{"version":3,"names":[],"sources":["E:/Clients/sabbir/Memories-Application/src/components/contact/ContactUs.js"],"sourcesContent":["// import React, { Component } from 'react';\r\n\r\n// import Grid from \"@material-ui/core/Grid\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n// import Button from \"@material-ui/core/Button\";\r\n// import { withStyles } from \"@material-ui/core/styles\";\r\n// import PropTypes from \"prop-types\";\r\n// import Typography from '@material-ui/core/Typography';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\n// import './ContactUs.css'\r\n\r\n// const styles = {\r\n//     contactForm: {\r\n//         marginTop: 50,\r\n//         width: '60vh'\r\n//         }\r\n//   };\r\n\r\n// export class ContactUs extends Component {\r\n//     state = {\r\n//         userName: '',\r\n//         email: '',\r\n//         message: ''\r\n//     }\r\n    \r\n//     // Handle submit button\r\n//     handleSubmit = async event => {\r\n        \r\n//         const { userName, email, message } = this.state;\r\n        \r\n//         try {\r\n//             const data = await postData('https://1u5leuz6gg.execute-api.us-west-2.amazonaws.com/prod/submit', { userName, email, message });\r\n//             console.log(JSON.stringify(data)); // JSON-string from `response.json()` call\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//         }\r\n\r\n//         async function postData(url = '', data = {}) {\r\n//             // Default options are marked with *\r\n//                 const response = await fetch(url, {\r\n//                 method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n//                 mode: 'no-cors', // no-cors, *cors, same-origin\r\n//                 cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n//                 credentials: 'same-origin', // include, *same-origin, omit\r\n//                 headers: {\r\n//                 'Content-Type': 'application/json'\r\n//                 // 'Content-Type': 'application/x-www-form-urlencoded',\r\n//                 },\r\n//                 redirect: 'follow', // manual, *follow, error\r\n//                 referrer: 'no-referrer', // no-referrer, *client\r\n//                 body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n//             });\r\n//         return await response.json(); // parses JSON response into native JavaScript objects\r\n//         }\r\n\r\n//         // Reset from after submiting\r\n//         document.getElementById('contact-form').reset();\r\n//         this.setState({ userName: \"\", email: \"\", message: \"\" });\r\n//         event.preventDefault();\r\n//     }\r\n\r\n//     // Handle fields change\r\n//     handleChange = input => event => {\r\n//         const { name, value } = event.target;\r\n\r\n//         this.setState({ [name]: value });\r\n        \r\n//     }\r\n\r\n//     render() {\r\n//         const { classes } = this.props;\r\n//         const { userName, email, message } = this.state;\r\n//         return (\r\n//             <div className={`bgc`}>\r\n//             <CssBaseline />\r\n//                 <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n//                     {'Contact Form'.toUpperCase()}\r\n//                 </Typography>\r\n//                 <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n//                     <Grid item>\r\n//                         <form\r\n//                         id=\"contact-form\"\r\n//                         className={classes.contactForm}\r\n//                         onSubmit={this.handleSubmit}\r\n//                         >\r\n//                             <Grid item>\r\n//                                 <TextField\r\n//                                 fullWidth\r\n//                                 required\r\n//                                 id=\"name\"\r\n//                                 label=\"Name\"\r\n//                                 name=\"userName\"\r\n//                                 className={classes.inputField}\r\n//                                 onChange={this.handleChange(\"userName\")}\r\n//                                 margin=\"normal\"\r\n//                                 />\r\n//                             </Grid>\r\n//                             <Grid item>\r\n//                                 <TextField\r\n//                                 fullWidth\r\n//                                 required\r\n//                                 id=\"email\"\r\n//                                 label=\"Email\"\r\n//                                 name=\"email\"\r\n//                                 className={classes.inputField}\r\n//                                 onChange={this.handleChange(\"email\")}\r\n//                                 margin=\"normal\"\r\n//                                 />\r\n//                             </Grid>\r\n//                             <Grid item>\r\n//                                 <TextField\r\n//                                 fullWidth\r\n//                                 required\r\n//                                 id=\"message\"\r\n//                                 label=\"Message\"\r\n//                                 name=\"message\"\r\n//                                 className={classes.inputField}\r\n//                                 onChange={this.handleChange(\"message\")}\r\n//                                 margin=\"normal\"\r\n//                                 multiline\r\n//                                 rowsMax=\"4\"\r\n//                                 />\r\n//                             </Grid>\r\n//                             <Grid container direction=\"row\" spacing={2} style={{ marginTop: 20 }}>\r\n//                             <Grid item >\r\n//                                 <Button\r\n//                                 className={classes.formButton}\r\n//                                 type=\"reset\"\r\n//                                 variant=\"contained\"\r\n//                                 color=\"default\"\r\n//                                 //disabled={submitting || pristine}\r\n//                                 >\r\n//                                 RESET\r\n//                                 </Button>\r\n//                             </Grid>\r\n//                             <Grid item >  \r\n//                                 <Button\r\n//                                 className={classes.formButton}\r\n//                                 type=\"submit\"\r\n//                                 variant=\"contained\"\r\n//                                 color=\"primary\"\r\n//                                 >\r\n//                                 Submit\r\n//                                 </Button>\r\n//                             </Grid>\r\n//                             </Grid>\r\n//                         </form>\r\n//                     </Grid>\r\n//                 </Grid>\r\n                \r\n//             </div> \r\n                      \r\n//         );\r\n//     }\r\n// }\r\n\r\n// ContactUs.propTypes = {\r\n//     classes: PropTypes.object.isRequired,\r\n//   };\r\n  \r\n// export default withStyles(styles)(ContactUs);"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}